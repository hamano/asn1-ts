import ObjectIdentifier from "./types/ObjectIdentifier";
import EmbeddedPDV from "./types/EmbeddedPDV";
import External from "./types/External";
import TypeIdentifier from "./types/TypeIdentifier";
import DURATION_EQUIVALENT from "./types/time/DURATION-EQUIVALENT";
export declare type COMPONENTS_OF<T> = T;
export declare type OPTIONAL<T> = T | undefined;
export declare type BOOLEAN = boolean;
export declare type INTEGER = number;
export declare type BIT_STRING = Uint8ClampedArray;
export declare type OCTET_STRING = Uint8Array;
export declare type NULL = null;
export declare type OBJECT_IDENTIFIER = ObjectIdentifier;
export declare type ObjectDescriptor = string;
export declare type EXTERNAL = External;
export declare type REAL = number;
export declare type INSTANCE_OF = External;
export declare type ENUMERATED = number;
export declare type EMBEDDED_PDV = EmbeddedPDV;
export declare type UTF8String = string;
export declare type RELATIVE_OID = number[];
export declare type SEQUENCE<T> = T[];
export declare type SEQUENCE_OF<T> = T[];
export declare type SET<T> = T[];
export declare type SET_OF<T> = T[];
export declare type GraphicString = string;
export declare type NumericString = string;
export declare type VisibleString = string;
export declare type PrintableString = string;
export declare type ISO646String = string;
export declare type TeletexString = Uint8Array;
export declare type GeneralString = string;
export declare type T61String = Uint8Array;
export declare type UniversalString = string;
export declare type VideotexString = Uint8Array;
export declare type BMPString = string;
export declare type IA5String = string;
export { default as CharacterString } from "./types/CharacterString";
export declare type UTCTime = Date;
export declare type GeneralizedTime = Date;
export declare type TIME = string;
export declare type DATE = Date;
export declare type TIME_OF_DAY = Date;
export declare type DATE_TIME = Date;
export declare type DURATION = DURATION_EQUIVALENT;
export declare type OID_IRI = string;
export declare type RELATIVE_OID_IRI = string;
export declare const TRUE = true;
export declare const FALSE = false;
export declare const TRUE_BIT = 1;
export declare const FALSE_BIT = 0;
export declare const PLUS_INFINITY: number;
export declare const MINUS_INFINITY: number;
export declare const NOT_A_NUMBER: number;
export declare const TYPE_IDENTIFIER: typeof TypeIdentifier;
export declare const itu_t = 0;
export declare const ccitt = 0;
export declare const itu_r = 0;
export declare const iso = 1;
export declare const joint_iso_itu_t = 2;
export declare const joint_iso_ccitt = 2;
//# sourceMappingURL=macros.d.ts.map